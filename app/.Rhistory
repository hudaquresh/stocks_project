install.packages(c('glmnet','MKmisc','reshape','tidyverse','R6','survival','RColorBrewer'))
source("https://bioconductor.org/biocLite.R")
biocLite('aracne.networks')
install.packages(c('gplots','ggplot2','matrixStats','survminer'))
install.packages('/Users/sunnyjones/Downloads/atools_1.19.tar.gz', repos = NULL, type="source")
biocLite('DESeq')
biocLite('ks')
install.packages('/Users/sunnyjones/Downloads/atools_1.19.tar.gz', repos = NULL, type="source")
install.packages('clusterpam')
install.packages('/Users/sunnyjones/Downloads/clusterpam.tar.gz', repos = NULL, type="source")
install.packages('/Users/sunnyjones/Downloads/clusterpam_0.1.tar.gz', repos = NULL, type="source")
install.packages('/Users/sunnyjones/Downloads/clusterpam_0.1.gz', repos = NULL, type="source")
?separate
library(devtools)
library(roxygen2)
create("sunfuncs")
?melt
??melt
library(reshape2)
?melt
?hclust
??ggplot
?ggplot
library(ggplot2)
?ggplot
??left_join
??arrange
getwd()
setwd("./sunfuncs")
document()
setwd(..)
setwd('/Users/sunnyjones/Documents/R Studio')
install("sunfuncs")
?plot.cluster.heatmap
setwd("./sunfuncs")
document()
setwd('/Users/sunnyjones/Documents/R Studio')
install('sunfuncs')
?plot.cluster.heatmap
uninstall("sunfuncs")
install('sunfuncs')
getwd()
install("sunfuncs")
?plot.cluster.heatmap
??plot.cluster.heatmap
getwd()
library(sunfuncs)
?plot.cluster.heatmap
load("~/Documents/Califano Lab /Pancancer_as_Ref/STES_Pancan_momaObj.rda")
viper <- momaObj$viper
viper <- as.data.frame(viper)
library(tidyverse)
max(viper)
min(viper)
load("~/Documents/Califano Lab /Pancancer_as_Ref/STES_Pancan_momaObj.rda")
library(moma)
library(sunfuncs)
setwd("~/Documents/R Studio")
install.packages("sunfuncs.tar.gz", repos = NULL, type = "source")
library(sunfuncs)
library(sunfuncs)
remove.packages("sunfuncs")
install.packages('sunfuncs.tar.gz', repos = NULL, type = "source")
setwd("~/Documents/R Studio")
install.packages('sunfuncs.tar.gz', repos = NULL, type = "source")
remove.packages("sunfuncs")
install.packages('sunfuncs.tar.gz', repos = NULL, type = "source")
plot.cluster.heatmap
load("~/Documents/Califano Lab /Pancancer_as_Ref/STES_Pancan_momaObj.rda")
getwd()
install.packages('sunnys.funcs.tar.gz', repos = NULL, type = 'source')
library(sunnys.funcs)
install.packages('sunnys.funcs.tar.gz', repos = NULL, type = 'source')
install.packages('randomForest')
install.packages('randomForestSRC')
install.packages(iterClust)
load("~/Documents/Califano Lab (comp)/Pancancer_as_Ref/STES_Pancan_momaObj.rda")
momaObj$clustering.results
momaObj$clustering.results <- momaObj$Cluster()
library(parallel)
library(moma)
momaObj$clustering.results <- momaObj$Cluster()
library(parallel)
momaObj$clustering.results <- momaObj$Cluster()
library(moma)
test.num <- c("124", "456")
test.char <- c('abc', 'def')
is.entrezIDs(test.num)
shiny::runApp('~/Google Drive/IEOR Prob and Stat/final_project/app')
runApp('~/Google Drive/IEOR Prob and Stat/final_project/app')
runApp('~/Google Drive/IEOR Prob and Stat/final_project/app')
runApp('~/Google Drive/IEOR Prob and Stat/final_project/app')
setwd("~/Google Drive/IEOR Prob and Stat/final_project/app")
library(tidyverse)
library(brrom)
library(broom)
indexes <- read_csv('indexes_monthly.csv')
fit <- lm(DJI ~ DATE, data = indexes)
summary(fit)$r.squared
tidy(fit)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
tidy(fit)
tidy[1,1]
tidy(fit)[1,1]
tidy(fit)[1,2]
print(tidy(fit)[1,2])
pastetidy(fit)[1,2])
paste(tidy(fit)[1,2])
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
indexes <- indexes %>% select(DJI, FTSE)
indexes <- melt(indexes)
# Calculate mean for plotting
m.indexes <- indexes %>%
group_by(variable) %>%
summarise_all(mean)
View(m.indexes)
m.indexes[2,]
paste(m.indexes[2,])
round(m.indexes[1,1],3)
m.indexes[1,1]
m.indexes[1,2]
signif(m.indexes[1,2],3)
paste(signif(m.indexes[1,2],3))
m.indexes$variable
m.indexes$value
m.indexes$value[1]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
indexes <- read_csv('indexes_monthly.csv')
indexes$monthnew <- if_else(indexes$month == "Oct", "Oct", "other")
m.indexes <- indexes %>% select(-DATE) %>% melt()
m.data <- m.indexes %>%
group_by(variable, monthnew) %>%
summarise_all(mean)
ggplot(m.indexes, aes(x=value, fill=monthnew))+
geom_density(alpha = 0.4, position='identity')+
geom_vline(data=m.data, aes(xintercept=value, color=monthnew), linetype='dashed', size=1) +
facet_wrap(~variable, ncol=5)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
indexes %>% select(DJI, DATE) %>% unlist(use.names = F)
indexes %>% select(DJI) %>% filter(month != "Nov")
indexes %>% select(DJI) %>% filter(month == "Nov")
indexes %>% filter(month == "Nov")
indexes %>% filter(month != "Nov")
test <- c('hi', 'i', 'test')
rbind(test, c('1', '2', '3'))
as.dataframe(rbind(test, c('1', '2', '3')))
as.data.frame(rbind(test, c('1', '2', '3')))
as.data.frame(rbind(test, c('1', '2', '3')), colnames = T)
as.data.frame(rbind(test, c('1', '2', '3')), colnames = F)
data.frame(rbind(test, c('1', '2', '3')))
data.frame(rbind(test, c('1', '2', '3')), colnames = F)
runApp()
runApp()
data.frame(colnames(test))
data_frame(colnames(test))
df <- data.frame(Ticker=character,)
df <- data.frame(Ticker=character,)
df <- data.frame(Ticker=character(),
Comparison=character(),
Hi=character())
df <- rbind(df, test)
View(df)
df <- data.frame()
df <- rbind(df, test)
View(df)
View(df)
runApp()
runApp()
matrix(ncol=4, colnames(test))
matrix(ncol=3, colnames(test))
matrix(ncol=3)
df <- data.frame(Ticker=character(),
Comparison=character(),
Hi=character())
df <- rbind(df, test)
View(df)
df <- tibble(Ticker=character(),
Comparison=character(),
Hi=character())
df <- rbind(df, test)
View(df)
colnames(df) <- test
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
sign(-1)
sign(1)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
month1 <- "Oct"
indexes$month1 <- if_else(indexes$month1, month1, "other")
indexes <- indexes %>%
select(GDAXI, FTSE, RUT, STI, STOXX, GSPCE, month) %>%
melt()
avg.indexes <- indexes %>%
group_by(variable, month) %>%
summarise_all(mean)
ggplot(indexes, aes(x=value, fill=month))+
geom_density(alpha = 0.4, position='identity')+
geom_vline(data=avg.indexes, aes(xintercept=value, color=month), linetype='dashed', size=1)+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = 20), plot.subtitle = element_text(hjust = 0.5)) +
facet_wrap(~variable, ncol=2)
indexes$month1 <- if_else(indexes$month1 == month1, month1, "other")
indexes <- indexes %>%
select(GDAXI, FTSE, RUT, STI, STOXX, GSPCE, month) %>%
melt()
avg.indexes <- indexes %>%
group_by(variable, month) %>%
summarise_all(mean)
ggplot(indexes, aes(x=value, fill=month))+
geom_density(alpha = 0.4, position='identity')+
geom_vline(data=avg.indexes, aes(xintercept=value, color=month), linetype='dashed', size=1)+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = 20), plot.subtitle = element_text(hjust = 0.5)) +
facet_wrap(~variable, ncol=2)
indexes$month1 <- if_else(indexes$month1 == month1, month1, "other")
indexes <- indexes %>%
select(GDAXI, FTSE, RUT, STI, STOXX50E, GSPCE, month) %>%
melt()
avg.indexes <- indexes %>%
group_by(variable, month) %>%
summarise_all(mean)
ggplot(indexes, aes(x=value, fill=month))+
geom_density(alpha = 0.4, position='identity')+
geom_vline(data=avg.indexes, aes(xintercept=value, color=month), linetype='dashed', size=1)+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = 20), plot.subtitle = element_text(hjust = 0.5)) +
facet_wrap(~variable, ncol=2)
indexes$month1 <- if_else(indexes$month == month1, month1, "other")
indexes <- indexes %>%
select(GDAXI, FTSE, RUT, STI, STOXX50E, GSPCE, month) %>%
melt()
avg.indexes <- indexes %>%
group_by(variable, month) %>%
summarise_all(mean)
ggplot(indexes, aes(x=value, fill=month))+
geom_density(alpha = 0.4, position='identity')+
geom_vline(data=avg.indexes, aes(xintercept=value, color=month), linetype='dashed', size=1)+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = 20), plot.subtitle = element_text(hjust = 0.5)) +
facet_wrap(~variable, ncol=2)
indexes$month1 <- if_else(indexes$month == month1, month1, "other")
indexes <- indexes %>%
select(GDAXI, FTSE, RUT, STI, STOXX50E, GSPCE, month) %>%
melt()
indexes <- indexes %>%
select(GDAXI, FTSE, RUT, STI, STOXX50E, GSPC, month) %>%
melt()
avg.indexes <- indexes %>%
group_by(variable, month) %>%
summarise_all(mean)
ggplot(indexes, aes(x=value, fill=month))+
geom_density(alpha = 0.4, position='identity')+
geom_vline(data=avg.indexes, aes(xintercept=value, color=month), linetype='dashed', size=1)+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = 20), plot.subtitle = element_text(hjust = 0.5)) +
facet_wrap(~variable, ncol=2)
indexes <- read_csv('indexes_monthly.csv')
month1 <- "Oct"
indexes$month <- if_else(indexes$month == month1, month1, "other")
indexes <- indexes %>%
select(GDAXI, FTSE, RUT, STI, STOXX50E, GSPC, month) %>%
melt()
avg.indexes <- indexes %>%
group_by(variable, month) %>%
summarise_all(mean)
ggplot(indexes, aes(x=value, fill=month))+
geom_density(alpha = 0.4, position='identity')+
geom_vline(data=avg.indexes, aes(xintercept=value, color=month), linetype='dashed', size=1)+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = 20), plot.subtitle = element_text(hjust = 0.5)) +
facet_wrap(~variable, ncol=2)
ggplot(indexes, aes(x=value, fill=month))+
geom_density(alpha = 0.4, position='identity')+
geom_vline(data=avg.indexes, aes(xintercept=value, color=month), linetype='dashed', size=1)+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = 20), plot.subtitle = element_text(hjust = 0.5),
axis.title.y = size = 10) +
facet_wrap(~variable, ncol=2) +
ggplot(indexes, aes(x=value, fill=month))+
geom_density(alpha = 0.4, position='identity')+
geom_vline(data=avg.indexes, aes(xintercept=value, color=month), linetype='dashed', size=1)+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = 20), plot.subtitle = element_text(hjust = 0.5),
axis.title.y = element_text(size = 10)) +
facet_wrap(~variable, ncol=2)
ggplot(indexes, aes(x=value, fill=month))+
geom_density(alpha = 0.4, position='identity')+
geom_vline(data=avg.indexes, aes(xintercept=value, color=month), linetype='dashed', size=1)+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = 20), plot.subtitle = element_text(hjust = 0.5)) +
xlab("Value") +
ylab("Density") +
facet_wrap(~variable, ncol=2)
ggplot(indexes, aes(x=value, fill=month))+
geom_density(alpha = 0.4, position='identity')+
geom_vline(data=avg.indexes, aes(xintercept=value, color=month), linetype='dashed', size=1)+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = 20), plot.subtitle = element_text(hjust = 0.5)) +
xlab("Value") +
ylab("Density") +
facet_wrap(~variable, ncol=3)
indexes <- read_csv('indexes_monthly.csv')
month1 <- "Nov"
indexes$month <- if_else(indexes$month == month1, month1, "other")
indexes <- indexes %>%
select(GDAXI, FTSE, RUT, STI, STOXX50E, GSPC, month) %>%
melt()
avg.indexes <- indexes %>%
group_by(variable, month) %>%
summarise_all(mean)
ggplot(indexes, aes(x=value, fill=month))+
geom_density(alpha = 0.4, position='identity')+
geom_vline(data=avg.indexes, aes(xintercept=value, color=month), linetype='dashed', size=1)+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = 20), plot.subtitle = element_text(hjust = 0.5)) +
xlab("Value") +
ylab("Density") +
facet_wrap(~variable, ncol=3)
runApp()
runApp()
View(indexes)
indexes <- read_csv('indexes_monthly.csv')
indexes <- indexes %>% select(-DATE, -month) %>% melt()
indexes <- indexes %>% select(-DATE) %>% melt()
indexes <- read_csv('indexes_monthly.csv')
indexes <- indexes %>% select(-DATE) %>% melt()
View(indexes)
ggplot(indexes, aes(x=value, fill=variable))+
geom_density(alpha = 0.4, position='identity')+
#eom_vline(data=avg.indexes, aes(xintercept=value, color=month), linetype='dashed', size=1)+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = 20), plot.subtitle = element_text(hjust = 0.5)) +
facet_wrap(~variable, ncol=2)
ggplot(indexes, aes(x=value, fill=month))+
geom_density(alpha = 0.4, position='identity')+
#eom_vline(data=avg.indexes, aes(xintercept=value, color=month), linetype='dashed', size=1)+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = 20), plot.subtitle = element_text(hjust = 0.5)) +
facet_wrap(~variable, ncol=2)
runApp()
df <- indexes %>% select("DJI")
p <- ggplot(indexes, aes(sample = y))
p + stat_qq() + stat_qq_line()
df <- indexes %>% select("DJI")
p <- ggplot(indexes, aes(sample = DJI))
p + stat_qq() + stat_qq_line()
df <- indexes %>% select(DJI)
p <- ggplot(indexes, aes(sample = DJI))
p + stat_qq() + stat_qq_line()
indexes <- indexes %>% select(DJI)
p <- ggplot(indexes, aes(sample = DJI))
p + stat_qq() + stat_qq_line()
indexes <- read_csv('indexes_monthly.csv')
indexes <- indexes %>% select(DJI)
p <- ggplot(indexes, aes(sample = DJI))
p + stat_qq() + stat_qq_line()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('app (1).R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
